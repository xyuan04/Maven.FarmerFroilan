@startuml

abstract class Animal {
String name;
String type;
ArrayList<Corn> foodEaten;

String getType();
void setType();
void eat(Edible food);
int howMuchFoodEaten();
void clearFood();
String makeNoise();
}

interface Edible {
}

interface Vegetable {
}

interface Eater<typeOfFood extends Edible> {
void eat(typeOfFood food);
}

interface NoiseMaker {
String makeNoise()
}

interface Produce<typeOfFood extends Edible> {
typeOfFood yield();
boolean hasBeenFertilized();
}

abstract class Crop {
Edible yield();
boolean hasBeenFertilized();
boolean hasBeenHarvested();
}

class CornStalk {
Corn yield();
}

class TomatoPlant {
Tomato yield();
}

class Horse {
boolean mounted = false;
int timesRode = 0;

void mounted();
void dismounted();
void clearRides();
}

class Chicken {
Egg yield();
boolean hasBeenFertilized();
}

class Egg {
}

interface Rideable {
void mounted();
void dismounted();
}

interface Rider {
mount(Rideable)
dismount()
}

interface Botanist {
plant(Crop, CropRow)
}

class CropRow {
Stack<Crop> crops;

Stack<Crop> getCrops();
void addCrop();
void removeCrop();
int sizeOfRow();
}

class Field {
HashTable<Integer, CropRow>;

Stack<CropRow> getCropRow();
void addCropRow();
void removeCropRow();
int sizeofField();
}

abstract class Vehicle {
String type;
boolean mounted = false;
int timesRode = 0;

String makeNoise();
void mounted();
void dismounted();
void clearRides();
}

interface FarmVehicle {
operate(Farm);
}

class Tractor {
Crop harvest();
}

abstract class Aircraft {
fly();
}

class CropDuster {
operate(Farm);
fertilize(CropRow);
}

abstract class Person {
ArrayList<Edible> foodEaten;

String makeNoise();
void eat(Edible food);
}

class Farmer {
plant(Crop, CropRow)
mount(Rideable));
dismount();
feed();
}

class Stable {
ArrayList<Horse>;

void addHorse();
Horse getHorse();
void removeHorse();
int sizeOfStable();
void clearStable();
}

class FarmHouse {
ArrayList<Person>;

void addPerson();
void removePerson();
int sizeOfFarmHouse();
void clearFarmHouse();
}

class ChickenCoop {
ArrayList<Chicken>;

void addChicken();
void removeChicken();
int sizeOfChickenCoop();
void clearChickenCoop();
}

class Farm {
ArrayList<Stable>;
ArrayList<ChickenCoop>;
FarmHouse;
}

class Corn {}

class Tomato {}


Eater <--- Animal
NoiseMaker <--- Animal

Animal <|--- Horse
Rideable <--- Horse

Animal <|--- Chicken
Produce <--- Chicken

NoiseMaker <--- Vehicle
Rideable <--- Vehicle

Vehicle <|--- Tractor
FarmVehicle <--- Tractor

Vehicle <|--- Aircraft

FarmVehicle <- CropDuster
Aircraft <|--- CropDuster

Edible <--- Egg

Produce <-- Crop

Crop <|-- CornStalk

Crop <|-- TomatoPlant

Eater <- Farmer
NoiseMaker <--- Farmer
Person <|--- Farmer
Rider <--- Farmer
Botanist <--- Farmer

Edible <|-- Vegetable

Vegetable <--- Corn
Vegetable <--- Tomato


@enduml